{"version":3,"file":"_e4M1BA9A.js","sources":["../../../src/components/game/game.marko"],"sourcesContent":["export enum TileType {\n  Empty,\n  Tile,\n  Spikes,\n  Start,\n  Goal,\n  DirectLeft,\n  DirectRight,\n  Spring,\n}\nexport interface Input {\n  tiles: TileType[][];\n}\nstatic declare global {\n  namespace Marko {\n    namespace CSS {\n      export interface Properties {\n        \"--x\": number;\n        \"--y\": number;\n      }\n    }\n  }\n}\n\nconst/startPos=((): [number, number] => {\n  for (let i = 0; i < input.tiles.length; i++) {\n    for (let j = 0; j < input.tiles[i].length; j++) {\n      if (input.tiles[i][j] === TileType.Start) {\n        return [j, i];\n      }\n    }\n  }\n  return [0, 0];\n})()\n\nlet/ballPos=[...startPos]\nclient function now() {\n  return +document.timeline.currentTime!;\n}\n\nlet/lastFrame=null as number | null\nlet/jumping=false\n\nscript\n  --\n  document.addEventListener(\n    \"keydown\",\n    (e) => {\n      if (\n        e.target instanceof Element &&\n        e.target.matches(\"button, [role='button'], input, select, textarea\")\n      ) {\n        return;\n      }\n      if (e.key === \" \") {\n        if (lastFrame === null) {\n          lastFrame = now();\n        } else {\n          jumping = true;\n        }\n      }\n    },\n    {\n      signal: $signal,\n    },\n  );\n  document.addEventListener(\n    \"keyup\",\n    (e) => {\n      if (e.key === \" \") {\n        jumping = false;\n      }\n    },\n    {\n      signal: $signal,\n    },\n  );\n  document.addEventListener(\n    \"pointerdown\",\n    (e) => {\n      if (\n        e.target instanceof Element &&\n        e.target.matches(\"button, [role='button'], input, select, textarea\")\n      ) {\n        return;\n      }\n      if (lastFrame === null) {\n        lastFrame = now();\n      } else {\n        jumping = true;\n      }\n    },\n    {\n      signal: $signal,\n    },\n  );\n  document.addEventListener(\n    \"pointerup\",\n    (e) => {\n      jumping = false;\n    },\n    {\n      signal: $signal,\n    },\n  );\n  --\n\nlocal-let/deaths=0 key=`level-${$global.params.id}-deaths`\nlocal-let/victory=false key=`level-${$global.params.id}-victory`\nstatic const GRAVITY = 0.015;\nstatic const BASE_SPEED = 0.1;\n\nlet/velX=BASE_SPEED\nlet/velY=0\n\nlet/dummy=true\nstatic const FRAME_RATE = 1000 / 60;\nscript\n  --\n  if (lastFrame !== null) {\n    dummy = !dummy;\n    const currentTime = now();\n    let gameTime: number | null = lastFrame;\n    if (gameTime && currentTime - gameTime > FRAME_RATE) {\n      gameTime += FRAME_RATE;\n      let nextPos = [ballPos[0] + velX, ballPos[1] + velY];\n\n      // ground collision\n      if (\n        input.tiles[Math.floor(nextPos[1] + 1)]?.[\n          Math.floor(nextPos[0] + 0.5)\n        ] === TileType.Tile\n      ) {\n        velY = jumping ? GRAVITY * -16 : 0;\n        nextPos[1] = Math.floor(nextPos[1]);\n      } else {\n        velY += GRAVITY;\n      }\n\n      // death\n      if (\n        nextPos[1] > input.tiles.length + 10 ||\n        input.tiles[Math.floor(nextPos[1] + 0.5)]?.[\n          Math.floor(nextPos[0] + 1)\n        ] === TileType.Tile ||\n        input.tiles[Math.floor(nextPos[1] + 0.8)]?.[\n          Math.floor(nextPos[0] + 0.8)\n        ] === TileType.Tile ||\n        input.tiles[Math.floor(nextPos[1])]?.[Math.floor(nextPos[0] + 0.5)] ===\n          TileType.Tile ||\n        input.tiles[Math.floor(nextPos[1] + 0.2)]?.[\n          Math.floor(nextPos[0] + 0.8)\n        ] === TileType.Tile ||\n        input.tiles[Math.floor(nextPos[1] + 0.5)]?.[\n          Math.floor(nextPos[0] + 0.5)\n        ] === TileType.Spikes\n      ) {\n        nextPos = [...startPos];\n        gameTime = null;\n        velX = BASE_SPEED;\n        velY = 0;\n        deaths++;\n      }\n      switch (\n        input.tiles[Math.floor(nextPos[1] + 0.5)]?.[\n          Math.floor(nextPos[0] + 0.5)\n        ]\n      ) {\n        case TileType.Goal:\n          gameTime = null;\n          victory = true;\n          window.location.href = \"/level/\" + (+($global.params.id ?? 0) + 1);\n          break;\n        case TileType.DirectLeft:\n          velX = -BASE_SPEED;\n          break;\n        case TileType.DirectRight:\n          velX = BASE_SPEED;\n          break;\n        case TileType.Spring:\n          velY = GRAVITY * -26;\n          break;\n      }\n      ballPos = nextPos;\n    }\n    lastFrame = gameTime;\n  }\n  --\n\ndiv.game\n  div.view style={ \"--x\": ballPos[0], \"--y\": ballPos[1] }\n    div [\n      class={\n        ball: true,\n        moving: lastFrame !== null,\n      }\n      style={\n        \"animation-duration\": 0.15 / Math.abs(velX) + \"s\",\n        \"animation-direction\": velX < 0 ? \"reverse\" : undefined,\n      }\n    ]\n\n    for|{ x, y, type }| of=input.tiles.flatMap((row, y) =>\n      row.flatMap((type, x) =>\n        type === TileType.Empty || type === TileType.Start\n          ? []\n          : [{ x, y, type }],\n      ),\n    )\n      if=type === TileType.Tile\n        div.tile style={ \"--x\": x, \"--y\": y }\n      else if=type === TileType.Spikes\n        div.spikes style={ \"--x\": x, \"--y\": y }\n      else if=type === TileType.Goal\n        div.goal style={ \"--x\": x, \"--y\": y }\n      else if=type === TileType.DirectLeft\n        div.left-sign style={ \"--x\": x, \"--y\": y }\n      else if=type === TileType.DirectRight\n        div.right-sign style={ \"--x\": x, \"--y\": y }\n      else if=type === TileType.Spring\n        div.spring style={ \"--x\": x, \"--y\": y }\n      html-comment\n\nstyle\n  --\n  .game {\n    position: fixed;\n    inset: 0;\n    z-index: -1;\n  }\n\n  .game .view {\n    position: absolute;\n    left: calc(50vw - 2.5vmax + var(--x) * -5vmax);\n    top: calc(50vh - 2.5vmax + var(--y) * -5vmax);\n  }\n\n  .game .view div {\n    position: absolute;\n    width: 5vmax;\n    height: 5vmax;\n    left: calc(var(--x) * 5vmax);\n    top: calc(var(--y) * 5vmax);\n    background-size: cover;\n  }\n\n  .tile {\n    background-image: url(\"assets/tile.png\");\n    z-index: -1;\n  }\n\n  .goal {\n    background-image: url(\"assets/flag.png\");\n  }\n\n  .left-sign {\n    background-image: url(\"assets/left-sign.png\");\n  }\n\n  .right-sign {\n    background-image: url(\"assets/right-sign.png\");\n  }\n\n  .spring {\n    background-image: url(\"assets/spring.png\");\n  }\n\n  .ball {\n    background-image: url(\"assets/ball.png\");\n    z-index: 1;\n\n    &.moving {\n      animation: spin linear infinite;\n    }\n  }\n\n  .spikes {\n    background-image: url(\"assets/spikes.png\");\n  }\n\n  @keyframes spin {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n  --\n"],"names":["TileType","now","_now","GRAVITY","BASE_SPEED","FRAME_RATE","_expr_x_y$elseBody5","_$","_scope","_","x","y","_y$elseBody5","_x$elseBody5","_elseBody5","_expr_x_y$elseBody4","_y$elseBody4","_x$elseBody4","_elseBody4","_expr_x_y$elseBody3","_y$elseBody3","_x$elseBody3","_elseBody3","_expr_x_y$elseBody2","_y$elseBody2","_x$elseBody2","_elseBody2","_expr_x_y$elseBody","_y$elseBody","_x$elseBody","_elseBody","_expr_x_y$ifBody","_y$ifBody","_x$ifBody","_ifBody","_if$forBody","_type$forBody","type","Tile","Spikes","Goal","DirectLeft","DirectRight","Spring","_y$forBody","_x$forBody","_pattern_$forBody","_pattern_","_params_2$forBody","_params_2","_forBody","_expr_input_tiles_startPos_ballPos_0_ballPos_1_lastFrame_jumping_deaths_velX_velY_dummy_effect","input_tiles","startPos","ballPos_0","ballPos_1","lastFrame","jumping","deaths","velX","velY","dummy","_dummy","currentTime","gameTime","nextPos","Math","floor","_velY","length","_velX","window","location","href","$global","params","id","_ballPos","_lastFrame","_expr_input_tiles_startPos_ballPos_0_ballPos_1_lastFrame_jumping_deaths_velX_velY_dummy","_expr_input_tiles_length_input_tiles_i_length_input_tiles_i_j","_startPos","_startPos2","_expr_ballPos_0_ballPos_","_for","abs","undefined","_deaths","_jumping","_lastFrame_effect","document","addEventListener","e","target","Element","matches","key","signal","ball","moving","_ballPos_2","_victory","victory","_ballPos_","ballPos","_input_tiles_i_j","_input_tiles_i_length","_input_tiles_i","input_tiles_i","j","_input_tiles_length","_input_tiles_","i","flatMap","row","Empty","Start","_setup_","_localLet","_localLet_input","value","timeline","input_tiles_length","input_tiles_i_length","input_tiles_i_j"],"mappings":"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"}