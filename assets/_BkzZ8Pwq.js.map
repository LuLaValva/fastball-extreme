{"version":3,"file":"_BkzZ8Pwq.js","sources":["../../../src/components/game/game.marko"],"sourcesContent":["export enum TileType {\n  Empty,\n  Tile,\n  Spikes,\n  Start,\n  Goal,\n  DirectLeft,\n  DirectRight,\n  Spring,\n}\nexport interface Input {\n  tiles: TileType[][];\n  onVictory: () => void;\n}\nstatic declare global {\n  namespace Marko {\n    namespace CSS {\n      export interface Properties {\n        \"--x\": number;\n        \"--y\": number;\n      }\n    }\n  }\n}\n\nconst/startPos=((): [number, number] => {\n  for (let i = 0; i < input.tiles.length; i++) {\n    for (let j = 0; j < input.tiles[i].length; j++) {\n      if (input.tiles[i][j] === TileType.Start) {\n        return [j, i];\n      }\n    }\n  }\n  return [0, 0];\n})()\n\nlet/ballPos=[...startPos]\nclient function now() {\n  return +document.timeline.currentTime!;\n}\n\nlet/lastFrame=null as number | null\nlet/jumping=false\n\nconst/startOrJump() {\n  if (lastFrame === null) {\n    lastFrame = now();\n  } else {\n    jumping = true;\n  }\n}\n\nscript\n  --\n  document.addEventListener(\n    \"keydown\",\n    (e) => {\n      if (\n        e.target instanceof Element &&\n        e.target.matches(\"button, [role='button'], input, select, textarea\")\n      ) {\n        return;\n      }\n      if (e.key === \" \") {\n        startOrJump();\n      }\n    },\n    {\n      signal: $signal,\n    },\n  );\n  document.addEventListener(\n    \"keyup\",\n    (e) => {\n      if (e.key === \" \") {\n        jumping = false;\n      }\n    },\n    {\n      signal: $signal,\n    },\n  );\n  --\n\nlocal-let/deaths=0 key=`level-${$global.params.id}-deaths`\nlocal-let/victory=false key=`level-${$global.params.id}-victory`\nstatic const GRAVITY = 0.015;\nstatic const BASE_SPEED = 0.1;\n\nlet/velX=BASE_SPEED\nlet/velY=0\n\nlet/dummy=true\nstatic const FRAME_RATE = 1000 / 60;\nscript\n  --\n  if (lastFrame !== null) {\n    dummy = !dummy;\n    const currentTime = now();\n    let gameTime: number | null = lastFrame;\n    if (gameTime && currentTime - gameTime > FRAME_RATE) {\n      gameTime += FRAME_RATE;\n      let nextPos = [ballPos[0] + velX, ballPos[1] + velY];\n\n      // ground collision\n      if (\n        input.tiles[Math.floor(nextPos[1] + 1)]?.[\n          Math.floor(nextPos[0] + 0.5)\n        ] === TileType.Tile\n      ) {\n        velY = jumping ? GRAVITY * -16 : 0;\n        nextPos[1] = Math.floor(nextPos[1]);\n      } else {\n        velY += GRAVITY;\n      }\n\n      // death\n      if (\n        nextPos[1] > input.tiles.length + 10 ||\n        input.tiles[Math.floor(nextPos[1] + 0.5)]?.[\n          Math.floor(nextPos[0] + 1)\n        ] === TileType.Tile ||\n        input.tiles[Math.floor(nextPos[1] + 0.8)]?.[\n          Math.floor(nextPos[0] + 0.8)\n        ] === TileType.Tile ||\n        input.tiles[Math.floor(nextPos[1])]?.[Math.floor(nextPos[0] + 0.5)] ===\n          TileType.Tile ||\n        input.tiles[Math.floor(nextPos[1] + 0.2)]?.[\n          Math.floor(nextPos[0] + 0.8)\n        ] === TileType.Tile ||\n        input.tiles[Math.floor(nextPos[1] + 0.5)]?.[\n          Math.floor(nextPos[0] + 0.5)\n        ] === TileType.Spikes\n      ) {\n        nextPos = [...startPos];\n        gameTime = null;\n        velX = BASE_SPEED;\n        velY = 0;\n        deaths++;\n      }\n      switch (\n        input.tiles[Math.floor(nextPos[1] + 0.5)]?.[\n          Math.floor(nextPos[0] + 0.5)\n        ]\n      ) {\n        case TileType.Goal:\n          gameTime = null;\n          victory = true;\n          input.onVictory();\n          break;\n        case TileType.DirectLeft:\n          velX = -BASE_SPEED;\n          break;\n        case TileType.DirectRight:\n          velX = BASE_SPEED;\n          break;\n        case TileType.Spring:\n          velY = GRAVITY * -26;\n          break;\n      }\n      ballPos = nextPos;\n    }\n    lastFrame = gameTime;\n  }\n  --\n\ndiv.game [\n  onPointerdown=startOrJump\n  onPointerup() {\n    jumping = false;\n  }\n]\n  div.view style={ \"--x\": ballPos[0], \"--y\": ballPos[1] }\n    div [\n      class={\n        ball: true,\n        moving: lastFrame !== null,\n      }\n      style={\n        \"animation-duration\": 0.15 / Math.abs(velX) + \"s\",\n        \"animation-direction\": velX < 0 ? \"reverse\" : undefined,\n      }\n    ]\n\n    for|{ x, y, type }| of=input.tiles.flatMap((row, y) =>\n      row.flatMap((type, x) =>\n        type === TileType.Empty || type === TileType.Start\n          ? []\n          : [{ x, y, type }],\n      ),\n    )\n      if=type === TileType.Tile\n        div.tile style={ \"--x\": x, \"--y\": y }\n      else if=type === TileType.Spikes\n        div.spikes style={ \"--x\": x, \"--y\": y }\n      else if=type === TileType.Goal\n        div.goal style={ \"--x\": x, \"--y\": y }\n      else if=type === TileType.DirectLeft\n        div.left-sign style={ \"--x\": x, \"--y\": y }\n      else if=type === TileType.DirectRight\n        div.right-sign style={ \"--x\": x, \"--y\": y }\n      else if=type === TileType.Spring\n        div.spring style={ \"--x\": x, \"--y\": y }\n      html-comment\n\nstyle\n  --\n  .game {\n    position: fixed;\n    inset: 0;\n    z-index: -1;\n    user-select: none;\n    view-transition-name: level;\n  }\n\n  .game .view {\n    position: absolute;\n    left: calc(50vw - 2.5vmax + var(--x) * -5vmax);\n    top: calc(50vh - 2.5vmax + var(--y) * -5vmax);\n  }\n\n  .game .view div {\n    position: absolute;\n    width: 5vmax;\n    height: 5vmax;\n    left: calc(var(--x) * 5vmax);\n    top: calc(var(--y) * 5vmax);\n    background-size: cover;\n  }\n\n  .tile {\n    background-image: url(\"assets/tile.png\");\n    z-index: -1;\n  }\n\n  .goal {\n    background-image: url(\"assets/flag.png\");\n  }\n\n  .left-sign {\n    background-image: url(\"assets/left-sign.png\");\n  }\n\n  .right-sign {\n    background-image: url(\"assets/right-sign.png\");\n  }\n\n  .spring {\n    background-image: url(\"assets/spring.png\");\n  }\n\n  .ball {\n    background-image: url(\"assets/ball.png\");\n    z-index: 1;\n\n    &.moving {\n      animation: spin linear infinite;\n    }\n\n    view-transition-name: ball;\n  }\n\n  .spikes {\n    background-image: url(\"assets/spikes.png\");\n  }\n\n  @keyframes spin {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n\n  ::view-transition-old(ball) {\n    animation: 250ms ease-out both ball-exit;\n  }\n  ::view-transition-new(ball) {\n    animation: 250ms 1s ease-out both ball-exit reverse;\n  }\n  @keyframes ball-exit {\n    from {\n      translate: 0 0;\n    }\n    to {\n      translate: 0 -70vh;\n    }\n  }\n\n  ::view-transition-old(level) {\n    animation: 1s linear both slide-to-left;\n  }\n  ::view-transition-new(level) {\n    animation: 1s linear both slide-from-right;\n  }\n  @keyframes slide-to-left {\n    from {\n      translate: 0 0;\n    }\n    50% {\n      opacity: 1;\n    }\n    to {\n      translate: -200% 0;\n      opacity: 0;\n    }\n  }\n  @keyframes slide-from-right {\n    from {\n      translate: 200% 0;\n      opacity: 0;\n    }\n    50% {\n      opacity: 1;\n    }\n    to {\n      translate: 0 0;\n    }\n  }\n  --\n"],"names":["TileType","now","_now","GRAVITY","BASE_SPEED","FRAME_RATE","_expr_x_y$elseBody5","_$","_scope","_","x","y","_y$elseBody5","_x$elseBody5","_elseBody5","_expr_x_y$elseBody4","_y$elseBody4","_x$elseBody4","_elseBody4","_expr_x_y$elseBody3","_y$elseBody3","_x$elseBody3","_elseBody3","_expr_x_y$elseBody2","_y$elseBody2","_x$elseBody2","_elseBody2","_expr_x_y$elseBody","_y$elseBody","_x$elseBody","_elseBody","_expr_x_y$ifBody","_y$ifBody","_x$ifBody","_ifBody","_if$forBody","_type$forBody","type","Tile","Spikes","Goal","DirectLeft","DirectRight","Spring","_y$forBody","_x$forBody","_pattern_$forBody","_pattern_","_params_2$forBody","_params_2","_forBody","_expr_input_tiles_input_onVictory_startPos_ballPos_0_ballPos_1_lastFrame_jumping_deaths_velX_velY_dummy_effect","input_tiles","input_onVictory","startPos","ballPos_0","ballPos_1","lastFrame","jumping","deaths","velX","velY","dummy","_dummy","currentTime","gameTime","nextPos","Math","floor","_velY","length","_velX","_ballPos","_lastFrame","_expr_input_tiles_input_onVictory_startPos_ballPos_0_ballPos_1_lastFrame_jumping_deaths_velX_velY_dummy","_expr_input_tiles_length_input_tiles_i_length_input_tiles_i_j","_startPos","_startPos2","_expr_ballPos_0_ballPos_","_for","abs","undefined","_deaths","_startOrJump_effect","startOrJump","document","addEventListener","e","target","Element","matches","key","signal","_jumping","_startOrJump","ball","moving","_startOrJump2","_ballPos_2","_victory","victory","_ballPos_","ballPos","_input_onVictory_","_input_tiles_i_j","_input_tiles_i_length","_input_tiles_i","input_tiles_i","j","_input_tiles_length","_input_tiles_","i","flatMap","row","Empty","Start","_setup__effect","_setup_","_localLet","_localLet_input","value","$global","params","id","timeline","input_tiles_length","input_tiles_i_length","input_tiles_i_j"],"mappings":"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"}